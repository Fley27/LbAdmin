{"version":3,"sources":["redux/actions/challengeCategory.js","Demo/Dashboard/challengeCategory.js"],"names":["addChallengeCategory","data","dispatch","a","config","headers","body","JSON","stringify","type","ADD_CHALLENGECATEGORY_REQUEST","axios","post","res","ADD_CHALLENGECATEGORY_SUCCESS","payload","challengeCategory","ADD_CHALLENGECATEGORY_FAIL","editChallengeCategory","challengeCategoryData","EDIT_CHALLENGECATEGORY_REQUEST","put","EDIT_CHALLENGECATEGORY_SUCCESS","EDIT_CHALLENGECATEGORY_FAIL","setAlert","deleteChallengeCategory","DELETE_CHALLENGECATEGORY_REQUEST","_id","delete","DELETE_CHALLENGECATEGORY_SUCCESS","success","DELETE_CHALLENGECATEGORY_FAIL","loadChallengeCategory","FETCH_CHALLENGECATEGORY_REQUEST","get","FETCH_CHALLENGECATEGORY_SUCCESS","challengeCategories","FETCH_CHALLENGECATEGORY_FAIL","selectChallengeCategory","SELECT_CHALLENGECATEGORY_REQUEST","SELECT_CHALLENGECATEGORY_SUCCESS","SELECT_CHALLENGECATEGORY_FAIL","ChallengeCategory","props","state","deleteShow","deleted","this","nextProps","console","log","setState","className","md","onClick","history","push","map","item","index","key","identifier","name","title","aria-label","show","onHide","Header","Body","Footer","Component","connect","withRouter"],"mappings":"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","file":"static/js/20.c50e6bf2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  FETCH_CHALLENGECATEGORY_REQUEST,\r\n  FETCH_CHALLENGECATEGORY_SUCCESS,\r\n  FETCH_CHALLENGECATEGORY_FAIL,\r\n  ADD_CHALLENGECATEGORY_REQUEST,\r\n  ADD_CHALLENGECATEGORY_SUCCESS,\r\n  ADD_CHALLENGECATEGORY_FAIL,\r\n  EDIT_CHALLENGECATEGORY_REQUEST,\r\n  EDIT_CHALLENGECATEGORY_SUCCESS,\r\n  EDIT_CHALLENGECATEGORY_FAIL,\r\n  DELETE_CHALLENGECATEGORY_REQUEST,\r\n  DELETE_CHALLENGECATEGORY_SUCCESS,\r\n  DELETE_CHALLENGECATEGORY_FAIL,\r\n  SELECT_CHALLENGECATEGORY_REQUEST,\r\n  SELECT_CHALLENGECATEGORY_SUCCESS,\r\n  SELECT_CHALLENGECATEGORY_FAIL,\r\n} from \"../const\";\r\n\r\nexport const addChallengeCategory = (data) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(data);\r\n  dispatch({\r\n    type: ADD_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `http://localhost:5000/api/challengeCategory`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.challengeCategory,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CHALLENGECATEGORY_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editChallengeCategory = (challengeCategoryData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeCategoryData);\r\n  dispatch({\r\n    type: EDIT_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.put(\r\n      `http://localhost:5000/api/challengeCategory`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EDIT_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const deleteChallengeCategory = (challengeCategoryData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  dispatch({\r\n    type: DELETE_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { _id } = challengeCategoryData;\r\n    const res = await axios.delete(\r\n      `http://localhost:5000/api/challengeCategory/${_id}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const loadChallengeCategory = () => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(`http://localhost:5000/api/challengeCategory`);\r\n    dispatch({\r\n      type: FETCH_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.challengeCategories,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const selectChallengeCategory = (challengeCategoryData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeCategoryData);\r\n  dispatch({\r\n    type: SELECT_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `http://localhost:5000/api/challengeCategory/select`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SELECT_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.challengeCategory,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELECT_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport \"./user.scss\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loadChallengeCategory,\r\n  selectChallengeCategory,\r\n  deleteChallengeCategory,\r\n} from \"../../redux/actions/challengeCategory\";\r\n\r\nimport { Button, Modal, Col } from \"react-bootstrap\";\r\nclass ChallengeCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deleteShow: false,\r\n      deleted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadChallengeCategory();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { deleted } = nextProps.challengeCategory;\r\n    if (deleted) {\r\n      console.log(`${deleted}`);\r\n      this.setState({ deleted: deleted });\r\n    }\r\n  }\r\n\r\n  deleteShow() {\r\n    this.setState({ deleteShow: !this.state.deleteShow });\r\n  }\r\n\r\n  render() {\r\n    const { challengeCategories } = this.props.challengeCategory;\r\n    console.log(this.props.challengeCategory);\r\n    return (\r\n      <div className='main-content'>\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <div className='card'>\r\n                <div className='card-header card-header-danger'>\r\n                  <h4 className='card-title '>Listado de Tipo de Retos</h4>\r\n                  <p className='card-category'>\r\n                    Seleccione un campo para editar\r\n                  </p>\r\n                </div>\r\n                <div className='card-body'>\r\n                  <Col md={12}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.props.history.push(\"/challenge/addchallengecategoria\");\r\n                      }}\r\n                      className='btn-danger text-center'\r\n                    >\r\n                      Crear\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    {challengeCategories ? (\r\n                      <div className='table-responsive'>\r\n                        <table className='table table-hover'>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Identificador</th>\r\n                              <th>Título</th>\r\n                              <th></th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {challengeCategories.map((item, index) =>\r\n                              index < 5 ? (\r\n                                <tr key={index}>\r\n                                  <td>{item.identifier}</td>\r\n                                  <td>{item.name}</td>\r\n                                  <td className='td-actions text-right'>\r\n                                  <Tooltip title='Edit'>\r\n                                      <button\r\n                                        onClick={() => {\r\n                                          this.props.selectChallengeCategory(\r\n                                            item\r\n                                          );\r\n                                          this.props.history.push(\"/dashboard/editchallengecategory\")\r\n                                        }}\r\n                                        aria-label='Edit'\r\n                                      >\r\n                                        <i className='material-icons warning'>\r\n                                          edit\r\n                                        </i>\r\n                                      </button>\r\n                                    </Tooltip>\r\n                                    <Tooltip title='Borrar'>\r\n                                      <button\r\n                                        onClick={() => {\r\n                                          this.props.selectChallengeCategory(\r\n                                            item\r\n                                          );\r\n                                          this.deleteShow();\r\n                                        }}\r\n                                        aria-label='Borrar'\r\n                                      >\r\n                                        <i className='material-icons danger'>\r\n                                          close\r\n                                        </i>\r\n                                      </button>\r\n                                    </Tooltip>\r\n                                  </td>\r\n                                </tr>\r\n                              ) : null\r\n                            )}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    ) : (\r\n                      <Col className='text-center'>\r\n                        <p>\r\n                          <strong>Challenge Category's list is empty</strong>\r\n                        </p>\r\n                      </Col>\r\n                    )}\r\n                  </Col>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          show={this.state.deleteShow}\r\n          onHide={() => {\r\n            this.deleteShow();\r\n          }}\r\n        >\r\n          <Modal.Header className='border'>\r\n            <Col md={12} className='text-center'>\r\n              {this.state.deleted ? (\r\n                <i className='material-icons error-outline'>check_circle</i>\r\n              ) : (\r\n                <i className='material-icons error-outline'>error</i>\r\n              )}\r\n            </Col>\r\n          </Modal.Header>\r\n          <Modal.Body className='border'>\r\n            {this.state.deleted ? (\r\n              <Col md={12} className='text-center'>\r\n                <h4 className='title'>Borrado</h4>\r\n                <h5 className='subTile'>Ha sido borrado</h5>\r\n              </Col>\r\n            ) : (\r\n              <Col md={12} className='text-center'>\r\n                <h4 className='title'>\r\n                  ¿Estas seguro de que quieres borrar esta categoria?\r\n                </h4>\r\n                <h5 className='subTitle'>\r\n                  No podrá recuperar los datos borrados\r\n                </h5>\r\n              </Col>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer className='border'>\r\n            {this.state.deleted ? (\r\n              <div className='container-footer'>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.deleteShow();\r\n                  }}\r\n                  className='bottom-danger'\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className='container-footer'>\r\n                <Button\r\n                  className='bottom-primary'\r\n                  onClick={() => {\r\n                    this.deleteShow();\r\n                  }}\r\n                >\r\n                  No Borrar\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    const { challengeCategory } = this.props.challengeCategory;\r\n                    this.props.deleteChallengeCategory(challengeCategory);\r\n                  }}\r\n                  className='bottom-danger'\r\n                >\r\n                  Borrar\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeCategory.propTypes = {\r\n  loadChallengeCategory: PropTypes.func.isRequired,\r\n  selectChallengeCategory: PropTypes.func.isRequired,\r\n  deleteChallengeCategory: PropTypes.func.isRequired,\r\n  challengeCategory: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  challengeCategory: state.challengeCategory,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  loadChallengeCategory,\r\n  selectChallengeCategory,\r\n  deleteChallengeCategory,\r\n})(withRouter(ChallengeCategory));\r\n"],"sourceRoot":""}