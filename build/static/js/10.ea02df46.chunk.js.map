{"version":3,"sources":["redux/actions/challengeType.js","redux/actions/challengeCategory.js","redux/actions/image.js","redux/actions/challenge.js","Demo/Dashboard/addChallengeAnswer.js","Demo/Forms/multiSelect.js","Demo/data/data.js","Demo/Dashboard/addChallenge.js"],"names":["addChallengeType","challengeTypeData","dispatch","a","config","headers","body","JSON","stringify","type","ADD_CHALLENGETYPE_REQUEST","axios","post","res","ADD_CHALLENGETYPE_SUCCESS","payload","data","challengeType","ADD_CHALLENGETYPE_FAIL","setAlert","editChallengeType","EDIT_CHALLENGETYPE_REQUEST","id","params","put","EDIT_CHALLENGETYPE_SUCCESS","EDIT_CHALLENGETYPE_FAIL","deleteChallengeType","DELETE_CHALLENGETYPE_REQUEST","_id","delete","DELETE_CHALLENGETYPE_SUCCESS","success","DELETE_CHALLENGETYPE_FAIL","loadChallengeType","FETCH_CHALLENGETYPE_REQUEST","get","FETCH_CHALLENGETYPE_SUCCESS","challengeTypes","FETCH_CHALLENGETYPE_FAIL","selectChallengeType","SELECT_CHALLENGETYPE_REQUEST","SELECT_CHALLENGETYPE_SUCCESS","SELECT_CHALLENGETYPE_FAIL","addChallengeCategory","ADD_CHALLENGECATEGORY_REQUEST","ADD_CHALLENGECATEGORY_SUCCESS","challengeCategory","ADD_CHALLENGECATEGORY_FAIL","editChallengeCategory","challengeCategoryData","EDIT_CHALLENGECATEGORY_REQUEST","EDIT_CHALLENGECATEGORY_SUCCESS","EDIT_CHALLENGECATEGORY_FAIL","deleteChallengeCategory","DELETE_CHALLENGECATEGORY_REQUEST","DELETE_CHALLENGECATEGORY_SUCCESS","DELETE_CHALLENGECATEGORY_FAIL","loadChallengeCategory","FETCH_CHALLENGECATEGORY_REQUEST","FETCH_CHALLENGECATEGORY_SUCCESS","challengeCategories","FETCH_CHALLENGECATEGORY_FAIL","selectChallengeCategory","SELECT_CHALLENGECATEGORY_REQUEST","SELECT_CHALLENGECATEGORY_SUCCESS","SELECT_CHALLENGECATEGORY_FAIL","uploadImage","formData","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAIL","addChallenge","ADD_CHALLENGE_REQUEST","ADD_CHALLENGE_SUCCESS","challenge","ADD_CHALLENGE_FAIL","editChallenge","challengeData","EDIT_CHALLENGE_REQUEST","EDIT_CHALLENGE_SUCCESS","EDIT_CHALLENGE_FAIL","deleteChallenge","DELETE_CHALLENGE_REQUEST","DELETE_CHALLENGE_SUCCESS","DELETE_CHALLENGE_FAIL","loadChallenge","FETCH_CHALLENGE_REQUEST","FETCH_CHALLENGE_SUCCESS","challenges","FETCH_CHALLENGE_FAIL","selectChallenge","SELECT_CHALLENGE_REQUEST","SELECT_CHALLENGE_SUCCESS","SELECT_CHALLENGE_FAIL","AddChallengeAnswer","props","answers","map","val","idx","image","filename","description","placeholder","key","index","className","md","Group","Label","htmlFor","name","data-id","onChange","HandleChange","style","height","width","borderRadius","marginTop","boxShadow","overflow","src","alt","Control","as","rows","cols","display","justifyContent","outline","onClick","add","aria-hidden","margin","Multi","items","label","otherProps","selectStyles","control","styles","background","minHeight","option","isDisabled","isFocused","isSelected","color","chroma","backgroundColor","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove","isMulti","closeMenuOnSelect","options","exports","Orientation","value","Pair","AddChallenge","handleChange","e","console","log","target","setState","newValue","actionMeta","group","groupEnd","onSubmit","preventDefault","RO","SO","SP","challengeAnswerData","state","obj","title","cost","appUsage","profileType","answerType","DurationHours","category","senderSex","receiverSex","senderOrientation","item","push","receiverOrientation","challengeIndividualData","senderPair","receiverPair","challengePairData","Change","includes","dataset","FormData","append","files","addNewRow","length","prevState","Math","random","deteteRow","filter","s","sindex","this","nextProps","history","upload","record","r","bind","clickOnDelete","variant","Component","connect","withRouter"],"mappings":"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","file":"static/js/10.ea02df46.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  FETCH_CHALLENGETYPE_REQUEST,\r\n  FETCH_CHALLENGETYPE_SUCCESS,\r\n  FETCH_CHALLENGETYPE_FAIL,\r\n  ADD_CHALLENGETYPE_REQUEST,\r\n  ADD_CHALLENGETYPE_SUCCESS,\r\n  ADD_CHALLENGETYPE_FAIL,\r\n  EDIT_CHALLENGETYPE_REQUEST,\r\n  EDIT_CHALLENGETYPE_SUCCESS,\r\n  EDIT_CHALLENGETYPE_FAIL,\r\n  DELETE_CHALLENGETYPE_REQUEST,\r\n  DELETE_CHALLENGETYPE_SUCCESS,\r\n  DELETE_CHALLENGETYPE_FAIL,\r\n  SELECT_CHALLENGETYPE_REQUEST,\r\n  SELECT_CHALLENGETYPE_SUCCESS,\r\n  SELECT_CHALLENGETYPE_FAIL,\r\n} from \"../const\";\r\n\r\nexport const addChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeTypeData);\r\n  dispatch({\r\n    type: ADD_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeType,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const editChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeTypeData);\r\n  dispatch({\r\n    type: EDIT_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { id } = challengeTypeData;\r\n    const params = id;\r\n    const res = await axios.put(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType/${params}`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeType,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EDIT_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const deleteChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  dispatch({\r\n    type: DELETE_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { _id } = challengeTypeData;\r\n    const res = await axios.delete(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType/${_id}`,\r\n\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const loadChallengeType = () => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(`https://libidoonbackend.herokuapp.com/api/challengeType`);\r\n    dispatch({\r\n      type: FETCH_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeTypes,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const selectChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeTypeData);\r\n  dispatch({\r\n    type: SELECT_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType/select`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SELECT_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeType,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELECT_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  FETCH_CHALLENGECATEGORY_REQUEST,\r\n  FETCH_CHALLENGECATEGORY_SUCCESS,\r\n  FETCH_CHALLENGECATEGORY_FAIL,\r\n  ADD_CHALLENGECATEGORY_REQUEST,\r\n  ADD_CHALLENGECATEGORY_SUCCESS,\r\n  ADD_CHALLENGECATEGORY_FAIL,\r\n  EDIT_CHALLENGECATEGORY_REQUEST,\r\n  EDIT_CHALLENGECATEGORY_SUCCESS,\r\n  EDIT_CHALLENGECATEGORY_FAIL,\r\n  DELETE_CHALLENGECATEGORY_REQUEST,\r\n  DELETE_CHALLENGECATEGORY_SUCCESS,\r\n  DELETE_CHALLENGECATEGORY_FAIL,\r\n  SELECT_CHALLENGECATEGORY_REQUEST,\r\n  SELECT_CHALLENGECATEGORY_SUCCESS,\r\n  SELECT_CHALLENGECATEGORY_FAIL,\r\n} from \"../const\";\r\n\r\nexport const addChallengeCategory = (data) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(data);\r\n  dispatch({\r\n    type: ADD_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `http://localhost:5000/api/challengeCategory`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.challengeCategory,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CHALLENGECATEGORY_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editChallengeCategory = (challengeCategoryData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeCategoryData);\r\n  dispatch({\r\n    type: EDIT_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.put(\r\n      `http://localhost:5000/api/challengeCategory`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EDIT_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const deleteChallengeCategory = (challengeCategoryData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  dispatch({\r\n    type: DELETE_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { _id } = challengeCategoryData;\r\n    const res = await axios.delete(\r\n      `http://localhost:5000/api/challengeCategory/${_id}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const loadChallengeCategory = () => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(`http://localhost:5000/api/challengeCategory`);\r\n    dispatch({\r\n      type: FETCH_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.challengeCategories,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const selectChallengeCategory = (challengeCategoryData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeCategoryData);\r\n  dispatch({\r\n    type: SELECT_CHALLENGECATEGORY_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `http://localhost:5000/api/challengeCategory/select`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SELECT_CHALLENGECATEGORY_SUCCESS,\r\n      payload: res.data.challengeCategory,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELECT_CHALLENGECATEGORY_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  UPLOAD_IMAGE_REQUEST,\r\n  UPLOAD_IMAGE_SUCCESS,\r\n  UPLOAD_IMAGE_FAIL,\r\n} from \"../const\";\r\n\r\nexport const uploadImage = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  dispatch({\r\n    type: UPLOAD_IMAGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/image/upload`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: UPLOAD_IMAGE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPLOAD_IMAGE_FAIL,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  FETCH_CHALLENGE_REQUEST,\r\n  FETCH_CHALLENGE_SUCCESS,\r\n  FETCH_CHALLENGE_FAIL,\r\n  ADD_CHALLENGE_REQUEST,\r\n  ADD_CHALLENGE_SUCCESS,\r\n  ADD_CHALLENGE_FAIL,\r\n  EDIT_CHALLENGE_REQUEST,\r\n  EDIT_CHALLENGE_SUCCESS,\r\n  EDIT_CHALLENGE_FAIL,\r\n  DELETE_CHALLENGE_REQUEST,\r\n  DELETE_CHALLENGE_SUCCESS,\r\n  DELETE_CHALLENGE_FAIL,\r\n  SELECT_CHALLENGE_REQUEST,\r\n  SELECT_CHALLENGE_SUCCESS,\r\n  SELECT_CHALLENGE_FAIL,\r\n} from \"../const\";\r\n\r\nexport const addChallenge = (data) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(data);\r\n  dispatch({\r\n    type: ADD_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_CHALLENGE_SUCCESS,\r\n      payload: res.data.challenge,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CHALLENGE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editChallenge = (challengeData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeData);\r\n  dispatch({\r\n    type: EDIT_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.put(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_CHALLENGE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EDIT_CHALLENGE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteChallenge = (challengeData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  dispatch({\r\n    type: DELETE_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { _id } = challengeData;\r\n    const res = await axios.delete(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge/${_id}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_CHALLENGE_SUCCESS,\r\n      payload: res.data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CHALLENGE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const loadChallenge = () => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(`https://libidoonbackend.herokuapp.com/api/challenge`);\r\n    dispatch({\r\n      type: FETCH_CHALLENGE_SUCCESS,\r\n      payload: res.data.challenges,\r\n    });\r\n\r\n    dispatch(setAlert(`Exito`, \"primary\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_CHALLENGE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const selectChallenge = (challengeData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeData);\r\n  dispatch({\r\n    type: SELECT_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge/select`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SELECT_CHALLENGE_SUCCESS,\r\n      payload: res.data.challenge,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELECT_CHALLENGE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\nimport \"./input.css\";\r\n\r\nconst AddChallengeAnswer = (props) => {\r\n  return props.answers.map((val, idx) => {\r\n    let image = `image-${idx}`,\r\n      filename =  val.image,\r\n      description = `tag-${idx}`,\r\n      placeholder = val.placeholder;\r\n    return (\r\n      <div key={val.index} className='cont'>\r\n                      <Row className='textarea '>\r\n                      <Col md = {4}>\r\n                          <Row>\r\n                            <Col >\r\n                            <Form.Group>\r\n                            <Form.Label>Imagen {idx + 1}\r\n                            </Form.Label>\r\n                            <label\r\n                              htmlFor={image}\r\n                              className='custom-file-upload'\r\n                            >\r\n                              <i className='material-icons '>attach_file</i>\r\n                            </label>\r\n                            <input id={image} name='image'\r\n                              data-id={idx}\r\n                              onChange={props.HandleChange} type='file' />\r\n                          </Form.Group>\r\n                            </Col>\r\n                            <Col >\r\n                            <div style = {{height : 50, width: 50, borderRadius: 5, marginTop: 28, boxShadow: \"0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)\"}}>\r\n                                <div style = {{overflow: \"hidden\" , height : 50, width: 50}} className='image-container w-auto'>\r\n                                  <img src={filename} alt='' style = {{height : 50, width: 50}} />\r\n                                </div>\r\n                            </div>\r\n                            </Col>\r\n                          </Row>\r\n                     </Col>\r\n                      <Col md = {6}>\r\n                          <Form.Group>\r\n                            <Form.Label>Descripcion de la repuesta*</Form.Label>\r\n                            <Form.Control\r\n                              id={description}\r\n                              name= \"description\"\r\n                              placeholder = {placeholder}\r\n                              data-id={idx}\r\n                              onChange={props.HandleChange}\r\n                              as = \"textarea\"\r\n                              rows='3'\r\n                              cols='20'\r\n                           />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col md = {2}>\r\n                        <div style = {{marginTop: 28}} className='form small'>\r\n          {idx === 0 ? (\r\n            <button\r\n          style = {{width: 30, height: 30, overflow: \"hidden\" , borderRadius: 50, display: \"flex\", justifyContent: \"center\", outline : \"none\"}}\r\n              onClick={() => props.add()}\r\n              type='button'\r\n              className='btn-primary'\r\n            >\r\n              <i className='fa fa-plus-circle' aria-hidden='true' style = {{margin: \"auto 0\", outline : \"none\"}}></i>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className='btn-danger'\r\n              onClick={() => props.delete(val)}\r\n              type='button'\r\n              style = {{width: 30, height: 30, overflow: \"hidden\", borderRadius: 50, display: \"flex\", justifyContent: \"center\", outline : \"none\"}}\r\n            >\r\n              <i className='fa fa-minus-circle ' aria-hidden='true' style = {{margin: \"auto 0\", outline : \"none\"}}></i>\r\n            </button>\r\n          )}\r\n        </div></Col>\r\n                      </Row>\r\n        \r\n      </div>\r\n    );\r\n  });\r\n};\r\nexport default AddChallengeAnswer;\r\n\r\n","import React from \"react\";\r\nimport chroma from \"chroma-js\";\r\nimport Select from \"react-select\";\r\nimport \"./combo-box.scss\";\r\nimport \"./multi-select.scss\";\r\n\r\nconst Multi = ({ HandleChange, items, label, ...otherProps }) => {\r\n  const selectStyles = {\r\n    control: (styles) => ({ ...styles, background: \"#f4f7fa\", minHeight: 50 }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n      const color = chroma(data.color);\r\n      return {\r\n        ...styles,\r\n        backgroundColor: isDisabled\r\n          ? null\r\n          : isSelected\r\n          ? data.color\r\n          : isFocused\r\n          ? color.alpha(0.1).css()\r\n          : null,\r\n        color: isDisabled\r\n          ? \"#ccc\"\r\n          : isSelected\r\n          ? chroma.contrast(color, \"white\") > 2\r\n            ? \"white\"\r\n            : \"black\"\r\n          : data.color,\r\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n        \":active\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor:\r\n            !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n        },\r\n      };\r\n    },\r\n    multiValue: (styles, { data }) => {\r\n      const color = chroma(data.color);\r\n      return {\r\n        ...styles,\r\n        backgroundColor: color.alpha(0.1).css(),\r\n      };\r\n    },\r\n    multiValueLabel: (styles, { data }) => ({\r\n      ...styles,\r\n      color: data.color,\r\n    }),\r\n    multiValueRemove: (styles, { data }) => ({\r\n      ...styles,\r\n      color: data.color,\r\n      \":hover\": {\r\n        backgroundColor: data.color,\r\n        color: \"white\",\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className='combo-group'>\r\n      <label className='label'>{label}</label>\r\n      <Select\r\n        isMulti\r\n        closeMenuOnSelect={false}\r\n        onChange={HandleChange}\r\n        {...otherProps}\r\n        options={items}\r\n        styles={selectStyles}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Multi;\r\n","exports.Orientation = [\r\n  { value: \"Heterosexual\", label: \"Heterosexual\", color: \"black\" },\r\n  { value: \"Heteroflexible\", label: \"Heteroflexible\", color: \"black\" },\r\n  { value: \"Bisexual\", label: \"Bisexual\", color: \"black\" },\r\n  { value: \"Gay\", label: \"Gay\", color: \"black\" },\r\n  { value: \"Lesbiana\", label: \"Lesbiana\", color: \"black\" },\r\n  { value: \"Pansexual\", label: \"Pansexual\", color: \"black\" },\r\n];\r\n\r\nexports.Pair = [\r\n  { value: \"Mujer Heterosexual\", label: \"Mujer Heterosexual\", color: \"black\" },\r\n  {\r\n    value: \"Mujer Heteroflexible\",\r\n    label: \"Mujer Heteroflexible\",\r\n    color: \"black\",\r\n  },\r\n  { value: \"Mujer Bisexual\", label: \"Mujer Bisexual\", color: \"black\" },\r\n  { value: \"Mujer Lesbiana\", label: \"Mujer Lesbiana\", color: \"black\" },\r\n  { value: \"Mujer Pansexual\", label: \"Mujer Pansexual\", color: \"black\" },\r\n  {\r\n    value: \"Hombre Heterosexual\",\r\n    label: \"Hombre Heterosexual\",\r\n    color: \"black\",\r\n  },\r\n  {\r\n    value: \"Hombre Heteroflexible\",\r\n    label: \"Hombre Heteroflexible\",\r\n    color: \"black\",\r\n  },\r\n  { value: \"Hombre Bisexual\", label: \"Hombre Bisexual\", color: \"black\" },\r\n  { value: \"Hombre Gay\", label: \"Hombre Gay\", color: \"black\" },\r\n  { value: \"Hombre Pansexual\", label: \"Hombre Pansexual\", color: \"black\" },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Col, Button, Form, Row } from \"react-bootstrap\";\r\nimport AddChallengeAnswer from \"./addChallengeAnswer\";\r\nimport \"./user.scss\";\r\n\r\n\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addChallenge } from \"../../redux/actions/challenge\";\r\nimport { loadChallengeCategory } from \"../../redux/actions/challengeCategory\";\r\nimport { loadChallengeType } from \"../../redux/actions/challengeType\";\r\nimport { uploadImage } from \"../../redux/actions/image\";\r\nimport Multi from \"../Forms/multiSelect\";\r\nimport { Orientation, Pair } from \"../data/data\";\r\n\r\nclass AddChallenge extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      cost: \"\",\r\n      category: \"\",\r\n      type: \"\",\r\n      appUsage: \"Citas Reales\",\r\n      profileType: \"\",\r\n      senderSex: \"\",\r\n      receiverSex: \"\",\r\n      answers: [{ index: Math.random(), image: \"\", description: \"\" , placeholder : \"\"}],\r\n      senderOrientation: [],\r\n      receiverOrientation: [],\r\n      senderPair: [],\r\n      receiverPair: [],\r\n      answerType: \"Texto\",\r\n      filename: \"\",\r\n      DurationHours: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.loadChallengeType();\r\n    this.props.loadChallengeCategory();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { challenge } = nextProps.challenge;\r\n    if (challenge) {\r\n      console.log(`${challenge}`);\r\n      this.setState({\r\n        description: \"\",\r\n        cost: \"\",\r\n        category: \"\",\r\n        type: \"\",\r\n        appUsage: \"Citas Reales\",\r\n        profileType: \"\",\r\n        senderSex: \"\",\r\n        receiverSex: \"\",\r\n        answers: [{ index: Math.random(), image: \"\", description: \"\" }],\r\n        senderOrientation: [],\r\n        receiverOrientation: [],\r\n        senderPair: [],\r\n        receiverPair: [],\r\n        answerType: \"Texto\",\r\n        filename: \"\",\r\n        DurationHours: \"\",\r\n      });\r\n      this.props.history.push(\"/dashboard/challenge\")\r\n    }\r\n    const { upload } = nextProps.image;\r\n    if (upload) {\r\n      this.setState({  filename: upload.filename  });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  handleChange = (e) => {\r\n    console.log(\r\n      \"targeting state \" + e.target.id + \" with value \" + e.target.value\r\n    );\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  HandleChange = (newValue = null, actionMeta = null) => {\r\n    console.group(\"Value Changed\");\r\n    this.setState({ [actionMeta.name]: newValue});\r\n    console.groupEnd();\r\n  };\r\n\r\n\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    var RO = [], SO = [], SP = [], RP = [];\r\n\r\n    let challengeAnswerData = this.state.answers;\r\n    let obj   = {};\r\n    obj.title = this.state.title;\r\n    obj.cost = this.state.cost;\r\n    obj.description = this.state.description;\r\n    obj.appUsage = this.state.appUsage;\r\n    obj.profileType = this.state.profileType;\r\n    obj.answerType = this.state.answerType;\r\n    obj.DurationHours = this.state.DurationHours;\r\n    obj.category = this.state.category;\r\n    const { challengeTypes } = this.props.challengeType;\r\n\r\n    obj.type = challengeTypes[this.state.type]._id ;\r\n\r\n    let challengeData = obj;\r\n\r\n    obj = {};\r\n\r\n    obj.senderSex = this.state.senderSex;\r\n    obj.receiverSex = this.state.receiverSex;\r\n\r\n    this.state.senderOrientation.map(item=>{\r\n      SO.push(item.value);\r\n    })\r\n\r\n    this.state.receiverOrientation.map(item=>{\r\n      RO.push(item.value);\r\n      console.log(item);\r\n    })\r\n\r\n    obj.senderOrientation = SO;\r\n    obj.receiverOrientation = RO;\r\n\r\n    let challengeIndividualData = obj;\r\n\r\n    obj = {};\r\n    this.state.senderPair.map(item=>{\r\n      SP.push(item.value);\r\n      console.log(item);\r\n    })\r\n    this.state.receiverPair.map(item=>{\r\n      SP.push(item.value);\r\n      console.log(item);\r\n    })\r\n    obj.senderPair = SP;\r\n    obj.receiverPair = RP;\r\n\r\n    let challengePairData = obj;\r\n\r\n    obj = {};\r\n\r\n    obj.challengeData = challengeData;\r\n    obj.challengeAnswerData = challengeAnswerData;\r\n    obj.challengeIndividualData = challengeIndividualData;\r\n    obj.challengePairData = challengePairData;\r\n\r\n    this.props.addChallenge(obj);\r\n\r\n  };\r\n\r\n\r\n\r\n  Change = (e) => {\r\n    if ([ \"description\"].includes(e.target.name)) {\r\n      let answers = [...this.state.answers];\r\n      console.log(\"just logging\");\r\n      answers[e.target.dataset.id][e.target.name] = e.target.value;\r\n    } else if ([\"image\"].includes(e.target.name)) {\r\n      console.log(\"just logging\");\r\n      const formData = new FormData();\r\n      formData.append(\"file\", e.target.files[0] );\r\n      this.props.uploadImage(formData);\r\n    console.log(`https://libidoonbackend.herokuapp.com/${e.target.files[0].name}`);\r\n      let answers = [...this.state.answers];\r\n      answers[e.target.dataset.id][e.target.name] = `https://libidoonbackend.herokuapp.com/${e.target.files[0].name}`;\r\n    } \r\n  }\r\n\r\n  addNewRow = (e) => {\r\n    if (this.state.answers.length < 6) {\r\n      this.setState((prevState) => ({\r\n        answers: [\r\n          ...prevState.answers,\r\n          {\r\n            index: Math.random(),\r\n            image: \"\",\r\n            description: \"\",\r\n          },\r\n        ],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deteteRow = (index) => {\r\n    this.setState({\r\n      answers: this.state.answers.filter((s, sindex) => index !== sindex),\r\n    });\r\n  };\r\n\r\n  clickOnDelete(record) {\r\n    this.setState({\r\n      answers: this.state.answers.filter((r) => r !== record),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { challengeTypes } = this.props.challengeType;\r\n    const { challengeCategories } = this.props.challengeCategory;\r\n    console.log(challengeTypes);\r\n    console.log(challengeCategories)\r\n    console.log(this.state.answers.map(item=>item.image));\r\n    return (\r\n      <div className='main-content'>\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <div className='card'>\r\n                <div className='card-header card-header-danger'>\r\n                  <h4 className='card-title '>Crear nuevos retos</h4>\r\n                </div>\r\n                <div className='card-body'>\r\n                  <Form className='mb-form' onSubmit={this.onSubmit} md={12}>\r\n                    <Col className='w-80'>\r\n                      <Row>\r\n                        <Col className='w-40 outline-none'>\r\n                          <Form.Group>\r\n                            <Form.Label>Titulo*</Form.Label>\r\n                            <Form.Control\r\n                              onChange={this.handleChange}\r\n                              value={this.state.title}\r\n                              id='title'\r\n                              type='text'\r\n                              placeholder='Titulo...'\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col className='w-40'>\r\n                          <Form.Group>\r\n                            <Form.Label>Coste*</Form.Label>\r\n                            <Form.Control\r\n                              onChange={this.handleChange}\r\n                              value={this.state.cost}\r\n                              id='cost'\r\n                              type='number'\r\n                              placeholder='Coste...'\r\n                            />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className='w-80'>\r\n                      <Row>\r\n                        <Col className='w-40'>\r\n                          <Form.Group>\r\n                            <Form.Label>Categoria*</Form.Label>\r\n                            <Form.Control\r\n                              onChange={this.handleChange}\r\n                              value={this.state.category}\r\n                              id='category'\r\n                              as='select'\r\n                              className='mb-3'\r\n                            >\r\n                              <option value=''>\r\n                                Seleccionar una categoria\r\n                              </option>\r\n                              {challengeCategories ? (\r\n                                challengeCategories.map((item, index) => (\r\n                                  <option value={item._id}>{item.name}</option>\r\n                                ))\r\n                              ): null}\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col className='w-40'>\r\n                          <Form.Group>\r\n                            <Form.Label>Tipologia*</Form.Label>\r\n                            <Form.Control\r\n                              onChange={this.handleChange}\r\n                              value={this.state.type}\r\n                              id='type'\r\n                              as='select'\r\n                              className='mb-3'\r\n                            >\r\n                              <option value=''>\r\n                                Seleccionar una tipologia\r\n                              </option>\r\n                              {challengeTypes ? (\r\n                                challengeTypes.map((item , index) => (\r\n                                  <option value={index}>{item.name}</option>\r\n                                ))\r\n                              ): null}\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className='w-80'>\r\n                      <Row>\r\n                        <Col className='w-40'>\r\n                          <Form.Group>\r\n                            <Form.Label>Uso de la App*</Form.Label>\r\n                            <Form.Control\r\n                              onChange={this.handleChange}\r\n                              value={this.state.appUsage}\r\n                              id='appUsage'\r\n                              as='select'\r\n                              className='mb-3'\r\n                            >\r\n                              <option value='Citas Reales'>Citas Reales</option>\r\n                              <option value='Ciber Sexo'>Ciber Sexo</option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                        <Col className='w-40'>\r\n                          <Form.Group>\r\n                            <Form.Label>Tipo de Perfil*</Form.Label>\r\n                            <Form.Control\r\n                              onChange={this.handleChange}\r\n                              value={this.state.profileType}\r\n                              id='profileType'\r\n                              as='select'\r\n                              className='mb-3'\r\n                            >\r\n                              <option value=''>\r\n                                Seleccionar un tipo de prefil\r\n                              </option>\r\n                              <option value='Soltero'>Soltero</option>\r\n                              <option value='Pareja'>Pareja</option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    {this.state.profileType === \"Soltero\" ? (\r\n                      <Col className='w-80'>\r\n                        <Row>\r\n                          <Col className='w-40'>\r\n                            <Form.Group>\r\n                              <Form.Label>Sexo Remitante*</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handleChange}\r\n                                value={this.state.senderSex}\r\n                                id='senderSex'\r\n                                as='select'\r\n                                className='mb-3'\r\n                              >\r\n                              <option value=''>\r\n                              Selecciona\r\n                            </option>\r\n                                <option value='Hombre'>Hombre</option>\r\n                                <option value='Mujer'>Mujer</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col className='w-40'>\r\n                            <Form.Group>\r\n                              <Form.Label>Sexo Destinatario*</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handleChange}\r\n                                value={this.state.receiverSex}\r\n                                id='receiverSex'\r\n                                as='select'\r\n                                className='mb-3'\r\n                              > \r\n                                <option value=''>\r\n                                   Selecciona\r\n                                </option>\r\n                                <option value='Hombre'>Hombre</option>\r\n                                <option value='Mujer'>Mujer</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col className='w-40'>\r\n                            <Multi\r\n                              name='senderOrientation'\r\n                              label='Orientacion Remitante'\r\n                              items={Orientation}\r\n                              HandleChange={this.HandleChange}\r\n                            />\r\n                          </Col>\r\n                          <Col className='w-40'>\r\n                            <Multi\r\n                              name='receiverOrientation'\r\n                              label='Orientacion Destinatario'\r\n                              items={Orientation}\r\n                              HandleChange={this.HandleChange}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    ) : this.state.profileType === \"Pareja\" ? (\r\n                      <Col className='w-80'>\r\n                        <Row>\r\n                          <Col className='w-40'>\r\n                            <Multi\r\n                              name='senderPair'\r\n                              label='Pareja Remitante'\r\n                              items={Pair}\r\n                              HandleChange={this.HandleChange}\r\n                            />\r\n                          </Col>\r\n                          <Col className='w-40'>\r\n                            <Multi\r\n                              name='receiverPair'\r\n                              label='Pareja Destinatario'\r\n                              items={Pair}\r\n                              HandleChange={this.HandleChange}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n\r\n                      </Col>\r\n                    ) : null}\r\n\r\n                    <Col className='w-80'>\r\n                      <Row>\r\n                        <Col className='w-40'>\r\n                          <Form.Group>\r\n                            <Form.Label>Temporizador*</Form.Label>\r\n                            <Form.Control\r\n                              onChange={this.handleChange}\r\n                              value={this.state.DurationHours}\r\n                              id='DurationHours'\r\n                              as='select'\r\n                              placeholder='Tiempo de expiracion...'\r\n                            >\r\n                              <option value='24'>1 dia</option>\r\n                              <option value='48'>2 dia </option>\r\n                              <option value='72'>3 dia </option>\r\n                              <option value='96'>4 dia </option>\r\n                              <option value='120'>5 dia </option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                        </Col>\r\n                        {this.state.type == \"imagen\" ? null : (\r\n                          <Col className='w-40'>\r\n                            <Form.Group>\r\n                              <Form.Label>Tipo de Respuesta*</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handleChange}\r\n                                value={this.state.answerType}\r\n                                id='answerType'\r\n                                as='select'\r\n                                className='mb-3'\r\n                              >\r\n                                <option value='Texto'>Texto</option>\r\n                                <option value='Imagen'>Imagen</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row className='textarea '>\r\n                        <Col>\r\n                          <Form.Group>\r\n                            <Form.Label>Descripcion del reto*</Form.Label>\r\n                            <Form.Control\r\n                              id='description'\r\n                              onChange={this.handleChange}\r\n                              value={this.state.description}\r\n                              as = \"textarea\"\r\n                              rows='8'\r\n                              cols='50'\r\n                           />\r\n                          </Form.Group>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    {\r\n                      this.state.type === \"0\" ? (\r\n                        <Col>\r\n                          <Col>\r\n                            <h4><strong>Agrega las respuestas del reto</strong></h4>\r\n                          </Col>\r\n                        <Col>\r\n                            <AddChallengeAnswer\r\n                               add={this.addNewRow.bind(this)}\r\n                               delete={this.clickOnDelete.bind(this)}\r\n                               HandleChange={this.Change}\r\n                               type = {this.state.answers}\r\n                               answers={this.state.answers}\r\n                            />\r\n                        </Col>\r\n                        </Col>\r\n                      ): null\r\n                    }\r\n                    <Col md={8}>\r\n                      <Button variant='danger' type='submit'>\r\n                        GUARDAR\r\n                      </Button>\r\n                    </Col>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddChallenge.propTypes = {\r\n  challengeType: PropTypes.object.isRequired,\r\n  challengeCategory: PropTypes.object.isRequired,\r\n  challenge: PropTypes.object.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  addChallenge: PropTypes.func.isRequired,\r\n  loadChallengeCategory: PropTypes.func.isRequired,\r\n  loadChallengeType: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  challengeType: state.challengeType,\r\n  challengeCategory: state.challengeCategory,\r\n  image: state.image,\r\n  challenge: state.challenge\r\n});\r\nexport default connect(mapStateToProps, { addChallenge, loadChallengeCategory, loadChallengeType, uploadImage, })(\r\n  withRouter(AddChallenge)\r\n);\r\n"],"sourceRoot":""}