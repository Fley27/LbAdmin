{"version":3,"sources":["redux/actions/challengeType.js","Demo/Dashboard/challengeType.js"],"names":["addChallengeType","challengeTypeData","dispatch","a","config","headers","body","JSON","stringify","type","ADD_CHALLENGETYPE_REQUEST","axios","post","res","ADD_CHALLENGETYPE_SUCCESS","payload","data","challengeType","ADD_CHALLENGETYPE_FAIL","setAlert","editChallengeType","EDIT_CHALLENGETYPE_REQUEST","id","params","put","EDIT_CHALLENGETYPE_SUCCESS","EDIT_CHALLENGETYPE_FAIL","deleteChallengeType","DELETE_CHALLENGETYPE_REQUEST","_id","delete","DELETE_CHALLENGETYPE_SUCCESS","success","DELETE_CHALLENGETYPE_FAIL","loadChallengeType","FETCH_CHALLENGETYPE_REQUEST","get","FETCH_CHALLENGETYPE_SUCCESS","challengeTypes","FETCH_CHALLENGETYPE_FAIL","selectChallengeType","SELECT_CHALLENGETYPE_REQUEST","SELECT_CHALLENGETYPE_SUCCESS","SELECT_CHALLENGETYPE_FAIL","ChallengeType","props","state","deleteShow","deleted","this","nextProps","console","log","setState","className","md","onClick","history","push","map","item","index","key","identifier","name","title","aria-label","show","onHide","Header","Body","Footer","Component","connect","withRouter"],"mappings":"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","file":"static/js/24.04f268a1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  FETCH_CHALLENGETYPE_REQUEST,\r\n  FETCH_CHALLENGETYPE_SUCCESS,\r\n  FETCH_CHALLENGETYPE_FAIL,\r\n  ADD_CHALLENGETYPE_REQUEST,\r\n  ADD_CHALLENGETYPE_SUCCESS,\r\n  ADD_CHALLENGETYPE_FAIL,\r\n  EDIT_CHALLENGETYPE_REQUEST,\r\n  EDIT_CHALLENGETYPE_SUCCESS,\r\n  EDIT_CHALLENGETYPE_FAIL,\r\n  DELETE_CHALLENGETYPE_REQUEST,\r\n  DELETE_CHALLENGETYPE_SUCCESS,\r\n  DELETE_CHALLENGETYPE_FAIL,\r\n  SELECT_CHALLENGETYPE_REQUEST,\r\n  SELECT_CHALLENGETYPE_SUCCESS,\r\n  SELECT_CHALLENGETYPE_FAIL,\r\n} from \"../const\";\r\n\r\nexport const addChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeTypeData);\r\n  dispatch({\r\n    type: ADD_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeType,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const editChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeTypeData);\r\n  dispatch({\r\n    type: EDIT_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { id } = challengeTypeData;\r\n    const params = id;\r\n    const res = await axios.put(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType/${params}`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeType,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EDIT_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const deleteChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  dispatch({\r\n    type: DELETE_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { _id } = challengeTypeData;\r\n    const res = await axios.delete(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType/${_id}`,\r\n\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const loadChallengeType = () => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(`https://libidoonbackend.herokuapp.com/api/challengeType`);\r\n    dispatch({\r\n      type: FETCH_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeTypes,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const selectChallengeType = (challengeTypeData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeTypeData);\r\n  dispatch({\r\n    type: SELECT_CHALLENGETYPE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challengeType/select`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SELECT_CHALLENGETYPE_SUCCESS,\r\n      payload: res.data.challengeType,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELECT_CHALLENGETYPE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport \"./user.scss\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loadChallengeType,\r\n  selectChallengeType,\r\n  deleteChallengeType,\r\n} from \"../../redux/actions/challengeType\";\r\n\r\nimport { Button, Modal, Col } from \"react-bootstrap\";\r\nclass ChallengeType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deleteShow: false,\r\n      deleted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadChallengeType();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { deleted } = nextProps.challengeType;\r\n    if (deleted) {\r\n      console.log(`${deleted}`);\r\n      this.setState({ deleted: deleted });\r\n    }\r\n  }\r\n\r\n  deleteShow() {\r\n    this.setState({ deleteShow: !this.state.deleteShow });\r\n  }\r\n\r\n  render() {\r\n    const { challengeTypes } = this.props.challengeType;\r\n    console.log(this.props.challengeType);\r\n    return (\r\n      <div className='main-content'>\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <div className='card'>\r\n                <div className='card-header card-header-danger'>\r\n                  <h4 className='card-title '>Listado de Tipo de Retos</h4>\r\n                  <p className='card-category'>\r\n                    Seleccione un campo para editar\r\n                  </p>\r\n                </div>\r\n                <div className='card-body'>\r\n                  <Col md={12}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.props.history.push(\"/challenge/addchallengetype\");\r\n                      }}\r\n                      className='btn-danger text-center'\r\n                    >\r\n                      Crear\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className='table-responsive'>\r\n                      <table className='table table-hover'>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Identificador</th>\r\n                            <th>Título</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {challengeTypes.map((item, index) =>\r\n                            index < 5 ? (\r\n                              <tr key={index}>\r\n                                <td>{item.identifier}</td>\r\n                                <td>{item.name}</td>\r\n                                <td className='td-actions text-right'>\r\n                                  <Tooltip title='editar'>\r\n                                    <button\r\n                                      aria-label='Editar'\r\n                                      onClick={() => {\r\n                                        this.props.selectChallengeType(item);\r\n                                        this.props.history.push(\r\n                                          \"/challenge/editchallengetype\"\r\n                                        );\r\n                                      }}\r\n                                    >\r\n                                      <i className='material-icons warning'>\r\n                                        edit\r\n                                      </i>\r\n                                    </button>\r\n                                  </Tooltip>\r\n                                  <Tooltip title='Borrar'>\r\n                                    <button\r\n                                      onClick={() => {\r\n                                        this.props.selectChallengeType(item);\r\n                                        this.deleteShow();\r\n                                      }}\r\n                                      aria-label='Borrar'\r\n                                    >\r\n                                      <i className='material-icons danger'>\r\n                                        close\r\n                                      </i>\r\n                                    </button>\r\n                                  </Tooltip>\r\n                                </td>\r\n                              </tr>\r\n                            ) : null\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Col>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          show={this.state.deleteShow}\r\n          onHide={() => {\r\n            this.deleteShow();\r\n          }}\r\n        >\r\n          <Modal.Header className='border'>\r\n            <Col md={12} className='text-center'>\r\n              {this.state.deleted ? (\r\n                <i className='material-icons error-outline'>check_circle</i>\r\n              ) : (\r\n                <i className='material-icons error-outline'>error</i>\r\n              )}\r\n            </Col>\r\n          </Modal.Header>\r\n          <Modal.Body className='border'>\r\n            {this.state.deleted ? (\r\n              <Col md={12} className='text-center'>\r\n                <h4 className='title'>Borrado</h4>\r\n                <h5 className='subTile'>Ese tipo de reto ha sido borrado</h5>\r\n              </Col>\r\n            ) : (\r\n              <Col md={12} className='text-center'>\r\n                <h4 className='title'>\r\n                  ¿Estas seguro de que quieres borrar este tipo de reto?\r\n                </h4>\r\n                <h5 className='subTitle'>\r\n                  No podrá recuperar los datos borrados\r\n                </h5>\r\n              </Col>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer className='border'>\r\n            {this.state.deleted ? (\r\n              <div className='container-footer'>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.deleteShow();\r\n                  }}\r\n                  className='bottom-danger'\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className='container-footer'>\r\n                <Button\r\n                  className='bottom-primary'\r\n                  onClick={() => {\r\n                    this.deleteShow();\r\n                  }}\r\n                >\r\n                  No Borrar\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    const { challengeType } = this.props.challengeType;\r\n                    this.props.deleteChallengeType(challengeType);\r\n                  }}\r\n                  className='bottom-danger'\r\n                >\r\n                  Borrar\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeType.propTypes = {\r\n  loadChallengeType: PropTypes.func.isRequired,\r\n  selectChallengeType: PropTypes.func.isRequired,\r\n  deleteChallengeType: PropTypes.func.isRequired,\r\n  challengeType: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  challengeType: state.challengeType,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  loadChallengeType,\r\n  selectChallengeType,\r\n  deleteChallengeType,\r\n})(withRouter(ChallengeType));\r\n"],"sourceRoot":""}