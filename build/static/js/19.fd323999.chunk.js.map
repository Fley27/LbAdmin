{"version":3,"sources":["redux/actions/challenge.js","Demo/Dashboard/challenge.js"],"names":["addChallenge","data","dispatch","a","config","headers","body","JSON","stringify","type","ADD_CHALLENGE_REQUEST","axios","post","res","ADD_CHALLENGE_SUCCESS","payload","challenge","ADD_CHALLENGE_FAIL","editChallenge","challengeData","EDIT_CHALLENGE_REQUEST","put","EDIT_CHALLENGE_SUCCESS","EDIT_CHALLENGE_FAIL","deleteChallenge","DELETE_CHALLENGE_REQUEST","_id","delete","DELETE_CHALLENGE_SUCCESS","success","DELETE_CHALLENGE_FAIL","setAlert","loadChallenge","FETCH_CHALLENGE_REQUEST","get","FETCH_CHALLENGE_SUCCESS","challenges","FETCH_CHALLENGE_FAIL","selectChallenge","SELECT_CHALLENGE_REQUEST","SELECT_CHALLENGE_SUCCESS","SELECT_CHALLENGE_FAIL","Challenge","props","state","deleteShow","deleted","this","nextProps","console","log","setState","className","md","onClick","history","push","variant","map","item","index","key","title","category","name","cost","DurationHours","aria-label","show","onHide","Header","Body","Footer","Component","connect","withRouter"],"mappings":"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","file":"static/js/19.fd323999.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  FETCH_CHALLENGE_REQUEST,\r\n  FETCH_CHALLENGE_SUCCESS,\r\n  FETCH_CHALLENGE_FAIL,\r\n  ADD_CHALLENGE_REQUEST,\r\n  ADD_CHALLENGE_SUCCESS,\r\n  ADD_CHALLENGE_FAIL,\r\n  EDIT_CHALLENGE_REQUEST,\r\n  EDIT_CHALLENGE_SUCCESS,\r\n  EDIT_CHALLENGE_FAIL,\r\n  DELETE_CHALLENGE_REQUEST,\r\n  DELETE_CHALLENGE_SUCCESS,\r\n  DELETE_CHALLENGE_FAIL,\r\n  SELECT_CHALLENGE_REQUEST,\r\n  SELECT_CHALLENGE_SUCCESS,\r\n  SELECT_CHALLENGE_FAIL,\r\n} from \"../const\";\r\n\r\nexport const addChallenge = (data) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(data);\r\n  dispatch({\r\n    type: ADD_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_CHALLENGE_SUCCESS,\r\n      payload: res.data.challenge,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CHALLENGE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editChallenge = (challengeData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeData);\r\n  dispatch({\r\n    type: EDIT_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.put(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: EDIT_CHALLENGE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EDIT_CHALLENGE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteChallenge = (challengeData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  dispatch({\r\n    type: DELETE_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const { _id } = challengeData;\r\n    const res = await axios.delete(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge/${_id}`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: DELETE_CHALLENGE_SUCCESS,\r\n      payload: res.data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_CHALLENGE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const loadChallenge = () => async (dispatch) => {\r\n  dispatch({\r\n    type: FETCH_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.get(`https://libidoonbackend.herokuapp.com/api/challenge`);\r\n    dispatch({\r\n      type: FETCH_CHALLENGE_SUCCESS,\r\n      payload: res.data.challenges,\r\n    });\r\n\r\n    dispatch(setAlert(`Exito`, \"primary\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_CHALLENGE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const selectChallenge = (challengeData) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify(challengeData);\r\n  dispatch({\r\n    type: SELECT_CHALLENGE_REQUEST,\r\n  });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://libidoonbackend.herokuapp.com/api/challenge/select`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SELECT_CHALLENGE_SUCCESS,\r\n      payload: res.data.challenge,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SELECT_CHALLENGE_FAIL,\r\n    });\r\n    dispatch(setAlert(`Error ${error}`, \"danger\"));\r\n  }\r\n};\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport \"./user.scss\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadChallenge, selectChallenge, deleteChallenge } from \"../../redux/actions/challenge\";\r\n\r\nimport { Button, Modal, Col } from \"react-bootstrap\";\r\nclass Challenge extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deleteShow: false,\r\n      deleted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadChallenge();\r\n    \r\n   // this.props.selectChallenge({});\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { deleted } = nextProps.challenge;\r\n    if (deleted) {\r\n      console.log(`${deleted}`);\r\n      this.setState({ deleted: deleted });\r\n      this.props.loadChallenge();\r\n    }\r\n  }\r\n\r\n  deleteShow() {\r\n    this.setState({ deleteShow: !this.state.deleteShow });\r\n  }\r\n\r\n\r\n  render() {\r\n    const {challenges, challenge} = this.props.challenge;\r\n    console.log(challenge);\r\n    return (\r\n      <div className='main-content'>\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-12'>\r\n              <div className='card'>\r\n                <div className='card-header card-header-danger'>\r\n                  <h4 className='card-title '>Listado de Retos</h4>\r\n                  <p className='card-category'>\r\n                    Seleccione un campo para editar\r\n                  </p>\r\n                </div>\r\n                <div className='card-body'>\r\n                  <Col md={12}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.props.selectChallenge(null)\r\n                        this.props.history.push(\"/dashboard/addchallenge\")\r\n                      }}\r\n                      variant='danger text-center'\r\n                    >\r\n                      Crear\r\n                    </Button>\r\n                  </Col>\r\n                  {\r\n                    challenges ? (\r\n                      <Col>\r\n                    <div className='table-responsive'>\r\n                      <table className='table table-hover'>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Título</th>\r\n                            <th>Categoría</th>\r\n                            <th>Tipología</th>\r\n                            <th>Coste</th>\r\n                            <th>Temporizador</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {challenges.map((item, index) =>\r\n                            index < 15 ? (\r\n                              <tr key={index}>\r\n                                <td>{item.title}</td>\r\n                                <td>{item.category.name}</td>\r\n                                <td>\r\n                                  {\r\n                                    item.type.name\r\n                                  }\r\n                                </td>\r\n                                <td>{item.cost}</td>\r\n                                <td>{item.DurationHours}</td>\r\n                                <td className='td-actions text-right'>\r\n                                <Tooltip title='Editar'>\r\n                                    <button\r\n                                      onClick={() => {\r\n                                       this.props.selectChallenge(item);\r\n                                       this.props.history.push(\"/dashboard/editchallenge\");\r\n                                      }}\r\n                                      aria-label='Editar'\r\n                                    >\r\n                                      <i className='material-icons warning'>\r\n                                        edit\r\n                                      </i>\r\n                                    </button>\r\n                                  </Tooltip>\r\n                                  <Tooltip title='Borrar'>\r\n                                    <button\r\n                                      onClick={() => {\r\n                                        this.deleteShow();\r\n                                        this.props.selectChallenge(item);\r\n                                      }}\r\n                                      aria-label='Borrar'\r\n                                    >\r\n                                      <i className='material-icons danger'>\r\n                                        close\r\n                                      </i>\r\n                                    </button>\r\n                                  </Tooltip>\r\n                                </td>\r\n                              </tr>\r\n                            ) : null\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </Col>\r\n                    ):(\r\n                      <Col className='text-center'>\r\n                        <p><strong>The challenge's list is empty</strong></p>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Modal\r\n          show={this.state.deleteShow}\r\n          onHide={() => {\r\n            this.deleteShow();\r\n          }}\r\n        >\r\n          <Modal.Header className='border'>\r\n            <Col md={12} className='text-center'>\r\n              {this.state.deleted ? (\r\n                <i className='material-icons error-outline'>check_circle</i>\r\n              ) : (\r\n                <i className='material-icons error-outline'>error</i>\r\n              )}\r\n            </Col>\r\n          </Modal.Header>\r\n          <Modal.Body className='border'>\r\n            {this.state.deleted ? (\r\n              <Col md={12} className='text-center'>\r\n                <h4 className='title'>Borrado</h4>\r\n                <h5 className='subTile'>El reto ha sido borrado</h5>\r\n              </Col>\r\n            ) : (\r\n              <Col md={12} className='text-center'>\r\n                <h4 className='title'>\r\n                  ¿Estas seguro de que quieres borrar este reto?\r\n                </h4>\r\n                <h5 className='subTitle'>\r\n                  No podrá recuperar los datos borrados\r\n                </h5>\r\n              </Col>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer className='border'>\r\n            {this.state.deleted ? (\r\n              <div className='container-footer'>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.deleteShow();\r\n                  }}\r\n                  className='bottom-danger'\r\n                >\r\n                  Ok\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className='container-footer'>\r\n                <Button\r\n                  className='bottom-primary'\r\n                  onClick={() => {\r\n                    this.deleteShow();\r\n                  }}\r\n                >\r\n                  No Borrar\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    const { challenge } = this.props.challenge;\r\n                    this.props.deleteChallenge(challenge);\r\n                  }}\r\n                  className='bottom-danger'\r\n                >\r\n                  Borrar\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChallenge.propTypes = {\r\n  challenge: PropTypes.object.isRequired,\r\n  loadChallenge: PropTypes.func.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  deleteChallenge:PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  challenge: state.challenge,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  loadChallenge,\r\n  selectChallenge,deleteChallenge\r\n})(withRouter(Challenge));\r\n"],"sourceRoot":""}